func Crawl(url string, depth int, fetcher Fetcher, mu *sync.Mutex, cache map[string]bool) {
	if depth <= 0 {
		return
	}

	mu.Lock()
	if _, ok := cache[url]; ok {
		mu.Unlock()
		return
	}

	cache[url] = true
	mu.Unlock()

	body, urls, err := fetcher.Fetch(url)
	if err != nil {
		fmt.Println(err)
		return
	}
	wg := sync.WaitGroup{}
	fmt.Printf("found: %s %q\n", url, body)
	for _, u := range urls {
		wg.Add(1)
		go func(u string) {
			defer wg.Done()
			Crawl(u, depth-1, fetcher, mu, cache)
		}(u)
	}
	wg.Wait()
	return
}

func main() {
	Crawl("https://golang.org/", 4, fetcher, &sync.Mutex{}, map[string]bool{})
}